// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace TestAutomation_PACSSystem.UIMaps.LoginPage.browserAction_mapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    using TestAutomation_PACSSystem.Utilities;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public partial class browserAction_map : logWriter
    {
        
        /// <summary>
        /// browserAction_method - Use 'browserAction_methodParams' to pass parameters into this method.
        /// </summary>
        public void browserAction_method()
        {
            #region Variable Declarations
            WinClient uINewtabInternetExplorClient = this.UINewtabInternetExplorWindow.UIItemWindow.UINewtabInternetExplorClient;
            WinMenuItem uIToolsMenuItem = this.UINewtabInternetExplorWindow.UIApplicationMenuBar.UIToolsMenuItem;
            WinMenuItem uIDeletebrowsinghistorMenuItem = this.UIItemWindow.UIContextMenu.UIDeletebrowsinghistorMenuItem;
            WinButton uIDeleteButton = this.UIDeleteBrowsingHistorWindow.UIDeleteWindow.UIDeleteButton;
            #endregion            

            // Type '{F10}' in 'New tab - Internet Explorer' client
            Keyboard.SendKeys(uINewtabInternetExplorClient, this.browserAction_methodParams.UINewtabInternetExplorClientSendKeys, ModifierKeys.None);

            // Click 'Tools' menu item
            //Mouse.Click(uIToolsMenuItem);
            Mouse.Click(uIToolsMenuItem, new Point(24, 14));

            // Click 'Delete browsing history... Ctrl+Shift+Del' menu item
           // Mouse.Click(uIDeletebrowsinghistorMenuItem);
            Mouse.Click(uIDeletebrowsinghistorMenuItem, new Point(23, 14));
            Playback.Wait(50);

            try
            {
                Keyboard.SendKeys("{LEFT}");
                Keyboard.SendKeys("{ENTER}");

                WriteLogs("PASS : Cleared the Local Stoarge Data : VERIFICATION");
            }
            catch (Exception ex)
            {
                WriteLogs("FAIL : Not cleared the Local Storage Data : VERIFICATION");
                WriteLogs("---------" + ex.Message.ToString());
            }
            
        }
        
        #region Properties
        public virtual browserAction_methodParams browserAction_methodParams
        {
            get
            {
                if ((this.mbrowserAction_methodParams == null))
                {
                    this.mbrowserAction_methodParams = new browserAction_methodParams();
                }
                return this.mbrowserAction_methodParams;
            }
        }
        
        public UINewtabInternetExplorWindow UINewtabInternetExplorWindow
        {
            get
            {
                if ((this.mUINewtabInternetExplorWindow == null))
                {
                    this.mUINewtabInternetExplorWindow = new UINewtabInternetExplorWindow();
                }
                return this.mUINewtabInternetExplorWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow1();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIDeleteBrowsingHistorWindow UIDeleteBrowsingHistorWindow
        {
            get
            {
                if ((this.mUIDeleteBrowsingHistorWindow == null))
                {
                    this.mUIDeleteBrowsingHistorWindow = new UIDeleteBrowsingHistorWindow();
                }
                return this.mUIDeleteBrowsingHistorWindow;
            }
        }
        #endregion
        
        #region Fields
        private browserAction_methodParams mbrowserAction_methodParams;
        
        private UINewtabInternetExplorWindow mUINewtabInternetExplorWindow;
        
        private UIItemWindow1 mUIItemWindow;
        
        private UIDeleteBrowsingHistorWindow mUIDeleteBrowsingHistorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'browserAction_method'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class browserAction_methodParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{F10}' in 'New tab - Internet Explorer' client
        /// </summary>
        public string UINewtabInternetExplorClientSendKeys = "{F10}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UINewtabInternetExplorWindow : BrowserWindow
    {
        
        public UINewtabInternetExplorWindow()
        {
            #region Search Criteria
            this.SearchProperties[UITestControl.PropertyNames.Name] = "New tab";
            this.SearchProperties[UITestControl.PropertyNames.ClassName] = "IEFrame";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        public void LaunchUrl(System.Uri url)
        {
            this.CopyFrom(BrowserWindow.Launch(url));
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIApplicationMenuBar UIApplicationMenuBar
        {
            get
            {
                if ((this.mUIApplicationMenuBar == null))
                {
                    this.mUIApplicationMenuBar = new UIApplicationMenuBar(this);
                }
                return this.mUIApplicationMenuBar;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIApplicationMenuBar mUIApplicationMenuBar;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "DirectUIHWND";
            //this.SearchProperties[WinWindow.PropertyNames.Instance] = "2";
            this.WindowTitles.Add("PACS | Villa Plus");
            #endregion
        }
        
        #region Properties
        public WinClient UINewtabInternetExplorClient
        {
            get
            {
                if ((this.mUINewtabInternetExplorClient == null))
                {
                    this.mUINewtabInternetExplorClient = new WinClient(this);
                    #region Search Criteria
                    this.mUINewtabInternetExplorClient.WindowTitles.Add("PACS | Villa Plus");
                    #endregion
                }
                return this.mUINewtabInternetExplorClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUINewtabInternetExplorClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIApplicationMenuBar : WinMenuBar
    {
        
        public UIApplicationMenuBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Application";
            this.WindowTitles.Add("New tab");
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIToolsMenuItem
        {
            get
            {
                if ((this.mUIToolsMenuItem == null))
                {
                    this.mUIToolsMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIToolsMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Tools";
                    this.mUIToolsMenuItem.WindowTitles.Add("PACS | Villa Plus");
                    #endregion
                }
                return this.mUIToolsMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIToolsMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Context";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32768";
            #endregion
        }
        
        #region Properties
        public UIContextMenu UIContextMenu
        {
            get
            {
                if ((this.mUIContextMenu == null))
                {
                    this.mUIContextMenu = new UIContextMenu(this);
                }
                return this.mUIContextMenu;
            }
        }
        #endregion
        
        #region Fields
        private UIContextMenu mUIContextMenu;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIContextMenu : WinMenu
    {
        
        public UIContextMenu(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinMenu.PropertyNames.Name] = "Context";
            #endregion
        }
        
        #region Properties
        public WinMenuItem UIDeletebrowsinghistorMenuItem
        {
            get
            {
                if ((this.mUIDeletebrowsinghistorMenuItem == null))
                {
                    this.mUIDeletebrowsinghistorMenuItem = new WinMenuItem(this);
                    #region Search Criteria
                    this.mUIDeletebrowsinghistorMenuItem.SearchProperties[WinMenuItem.PropertyNames.Name] = "Delete browsing history...\tCtrl+Shift+Del";
                    #endregion
                }
                return this.mUIDeletebrowsinghistorMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private WinMenuItem mUIDeletebrowsinghistorMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDeleteBrowsingHistorWindow : WinWindow
    {
        
        public UIDeleteBrowsingHistorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Delete Browsing History";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32770";
            this.WindowTitles.Add("Delete Browsing History");
            #endregion
        }
        
        #region Properties
        public UIDeleteWindow UIDeleteWindow
        {
            get
            {
                if ((this.mUIDeleteWindow == null))
                {
                    this.mUIDeleteWindow = new UIDeleteWindow(this);
                }
                return this.mUIDeleteWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIDeleteWindow mUIDeleteWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.21005.1")]
    public class UIDeleteWindow : WinWindow
    {
        
        public UIDeleteWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "5543";
            this.WindowTitles.Add("Delete Browsing History");
            #endregion
        }
        
        #region Properties
        public WinButton UIDeleteButton
        {
            get
            {
                if ((this.mUIDeleteButton == null))
                {
                    this.mUIDeleteButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIDeleteButton.SearchProperties[WinButton.PropertyNames.Name] = "Delete";
                    this.mUIDeleteButton.WindowTitles.Add("Delete Browsing History");
                    #endregion
                }
                return this.mUIDeleteButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIDeleteButton;
        #endregion
    }
}
